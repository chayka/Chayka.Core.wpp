"use strict";angular.module("chayka-options-form",["chayka-forms","chayka-wp-admin"]).controller("optionsForm",["$scope","$timeout","ajax",function($scope,$timeout,ajax){$scope.namespace="",$scope.options={site:{}},$scope.validator=null;var processResponse=function(data){angular.forEach(data.payload,function(value,option){$scope.options[option]=value})};$scope.saveOptions=function(){$scope.validator&&!$scope.validator.validateFields()||ajax.post("/api/options/set",{namespace:$scope.namespace,options:$scope.options},{spinnerMessage:"Saving options",success:processResponse})},$scope.loadOptions=function(){ajax.post("/api/options/get",{namespace:$scope.namespace,options:$scope.options},{spinnerMessage:"Loading options",success:processResponse})},$timeout($scope.loadOptions,0)}]);
"use strict";angular.module("chayka-wp-admin",["chayka-spinners","chayka-nls","chayka-utils","chayka-buttons","chayka-forms","ui.sortable"]).controller("metabox",["$scope",function($scope){$scope.meta={},$scope.validator=null}]).controller("sidebar-widget-form",["$scope",function($scope){$scope.options={},$scope.validator=null}]).factory("mediaResolver",["ajax",function(ajax){var queue={},multiQueue=[],cache={},bulkDelay=100,bulkTimeout=null,resolver={resolveById:function(id,callback,delay){return cache[id]?void callback(cache[id]):(queue[id]||(queue[id]=[]),queue[id].push(callback),bulkTimeout&&clearTimeout(bulkTimeout),void(bulkTimeout=setTimeout(resolver.bulkResolveById,delay||bulkDelay)))},resolveByIds:function(ids,callback,delay){var idsArr,unresolvedIds=[],resolvedItems=[];angular.isString(ids)&&(idsArr=[],ids.split(" ").forEach(function(id){idsArr.push(parseInt(id))})),angular.isArray(ids)&&(idsArr=ids);for(var i=0;i<idsArr.length;i++){var id=parseInt(idsArr[i]);idsArr[i]=id,cache[id]?resolvedItems.push(cache[id]):unresolvedIds.push(id)}return unresolvedIds.length?(multiQueue.push({ids:idsArr,callback:callback}),bulkTimeout&&clearTimeout(bulkTimeout),void(bulkTimeout=setTimeout(resolver.bulkResolveById,delay||bulkDelay))):void callback(resolvedItems)},bulkResolveById:function(){var requestQueue=queue;queue={};var requestMultiQueue=multiQueue;multiQueue=[];var ids=[],requestedIds={};for(var id in requestQueue)requestQueue.hasOwnProperty(id)&&(ids.push(id),requestedIds[id]=!0);requestMultiQueue.forEach(function(itemSet){for(var i=0;i<itemSet.ids.length;i++)id=itemSet.ids[i],cache[id]||requestedIds[id]||(ids.push(id),requestedIds[id]=!0)}),ajax.post("/api/post-models/",{post_type:"attachment",post__in:ids,post_status:"any",posts_per_page:-1},{spinnerMessage:"Retrieving media data",errorMessage:"Failed to retrieve media data",success:function(data){var items=data.payload.items;items.forEach(function(item){cache[item.id]=item;var callbacks=requestQueue[item.id];if(callbacks&&callbacks.length)for(var i=0;i<callbacks.length;i++)callbacks[i](item)}),requestMultiQueue.forEach(function(itemSet){for(var item,id,items=[],i=0;i<itemSet.ids.length;i++)id=itemSet.ids[i],item=cache[id],item&&items.push(item);itemSet.callback(items)})}})}};return resolver}]).directive("mediaPicker",["buttons","mediaResolver","nls","modals",function(buttons,mediaResolver,nls,modals){return{restrict:"AE",scope:{title:"@?",pickerButtonText:"@?",type:"@?",mode:"@",model:"=",size:"@",multiple:"@?",itemWidth:"@?",itemHeight:"@?",itemMode:"@?",onChange:"&?"},transclude:!0,template:'<div class="chayka-media_picker" data-ng-class="{\'image-set\': hasImages(), multiple: multiple}"><img data-ng-src="{{mediaSrc}}" data-ng-show="!!mediaSrc" data-ng-click="pickMedia();"/><div class="media_items sortable-row" data-ng-show="mediaItems && mediaItems.length" data-ng-model="mediaItems" data-as-sortable="dragControl" ><div class="media_item" data-ng-class="{contain: itemMode === \'contain\', cover: itemMode === \'cover\'}" data-ng-repeat="item in mediaItems" data-as-sortable-item style="background-image: {{\'url(\'+item.url+\')\'}}; width: {{itemWidth || itemHeight || \'100px\'}}; height: {{itemHeight || itemWidth || \'100px\'}};"><div class="sortable-handle" data-as-sortable-item-handle><button class="btn_remove" data-ng-click="removeMediaItem($event, item)" data-no-drag ><span>&times;</span></button></div></div></div><div class="no_image" data-ng-click="pickMedia();" data-ng-show="!hasImages()">   <div data-spinner="spinner"></div></div><div class="note" data-ng-transclude></div><div class="buttons">   <button class="{{buttonClass}} btn_clear" data-ng-click="clearMedia($event);" data-ng-show="!!hasImages()" >{{ "Clear" | nls}}</button>   <button class="{{buttonClass}} btn_pick" data-ng-click="pickMedia($event);">{{ pickerButtonText || "Browse" | nls}}</button></div></div>',controller:function($scope,$element){$scope.buttonClass=buttons.getButtonClass(),$scope.mediaSrc=null,$scope.mediaItems=[],$scope.mode=$scope.mode||"id",$scope.size=$scope.size||"medium",$scope.spinner=null,$scope.prevModel="";var frame=null,wp=window.wp;$scope.prevModel=$scope.model?JSON.stringify($scope.model):"",$scope.$watch("model",function(model){if($scope.multiple)switch($scope.mode){case"id":$scope.mediaSrc="",$scope.mediaItems=[],model&&($scope.spinner&&$scope.spinner.show(nls._("Retrieving media data...")),mediaResolver.resolveByIds(model,function(items){$scope.spinner&&$scope.spinner.hide(),items.forEach(function(item){$scope.mediaItems.push({id:item.id,url:(item.image[$scope.size]||item.image.thumbnail).url})})}));break;case"url":model.split(" ").forEach(function(url){$scope.mediaItems.push({id:0,url:url})})}else switch($scope.mode){case"id":$scope.mediaSrc="",$scope.mediaItems=[],model=parseInt(model),model&&($scope.spinner&&$scope.spinner.show(nls._("Retrieving media data...")),mediaResolver.resolveById(model,function(item){$scope.spinner&&$scope.spinner.hide(),$scope.mediaSrc=(item.image[$scope.size]||item.image.thumbnail).url}));break;case"url":$scope.mediaSrc=model}var newModel=model?JSON.stringify(model):"";$scope.onChange&&newModel!==$scope.prevModel&&$scope.onChange(),$scope.prevModel=newModel}),$scope.dragControl={orderChanged:function(event){$scope.updateMultiModel($scope.mediaItems)},scrollableContainer:$element.attr("id")},$scope.hasImages=function(){return!!$scope.mediaItems&&!!$scope.mediaItems.length||!!$scope.mediaSrc},$scope.removeMediaItem=function($event,item){$event.preventDefault(),modals.confirm(nls._("Delete this item?"),function(){var value="";switch($scope.mode){case"id":value=item.id;break;case"url":value=item.url}var re=new RegExp("\\b"+value+"\\b\\s?");$scope.model=$scope.model.replace(re,"").trim()})},$scope.updateMultiModel=function(items){var values=[];items.forEach(function(item){switch($scope.mode){case"id":values.push(item.id);break;case"url":values.push(item.url)}}),$scope.model=values.join(" ")},$scope.pickMedia=function($event){$event&&$event.preventDefault&&$event.preventDefault(),frame&&frame.$el.remove(),frame=wp.media({title:nls._($scope.title||"Select or Upload Media"),button:{text:nls._($scope.pickerButtonText||"Use this media")},multiple:$scope.multiple}),frame.on("open",function(){if("id"===$scope.mode){var selection=frame.state().get("selection");$scope.model&&($scope.multiple?$scope.model.split(" ").forEach(function(id){selection.add(wp.media.attachment(id))}):selection.add(wp.media.attachment($scope.model)))}}),frame.on("select",function(){if($scope.multiple){var attachments=frame.state().get("selection").toJSON();$scope.updateMultiModel(attachments)}else{var attachment=frame.state().get("selection").first().toJSON();switch($scope.mode){case"id":$scope.model=attachment.id;break;case"url":$scope.model=attachment.url}}$scope.$apply()}),frame.open(),frame.$el.show()},$scope.clearMedia=function($event){$event.preventDefault(),$scope.multiple&&$scope.mediaItems.length>3?modals.confirm(nls._("Remove media items?"),function(){$scope.model=""}):$scope.model=""}}}}]).directive("colorPicker",["utils",function(utils){return{restrict:"AE",scope:{defaultColor:"@?",palettes:"=?"},link:function($scope,element,attrs){var $=angular.element,$element=$(element),onPickerColorChange=function(event,change){setTimeout(function(){$scope.$parent.$apply(attrs.ngModel+'="'+(change&&change.color.toString()||"")+'";')},0)};if($.fn.wpColorPicker){$element.attr("type","hidden");var $input=$('<input type="text">').insertAfter(element).val($element.val()).wpColorPicker({defaultColor:$scope.defaultColor,hide:!0,palettes:$scope.palettes,change:onPickerColorChange,clear:onPickerColorChange});$scope.$parent.$watch(attrs.ngModel,function(value){value!==$input.val()&&$input.wpColorPicker("color",value)});var $inputDiv=$element.parent(),$pickerContainer=$inputDiv.find(".wp-picker-container");$pickerContainer.find(".wp-color-result"),$pickerContainer.find(".wp-picker-input-wrap"),$pickerContainer.find(".wp-picker-holder");$pickerContainer.off("keyup","*"),$input.off("keyup").on("keyup",function(event){13!==event.keyCode&&32!==event.keyCode||(event.preventDefault(),event.stopPropagation(),$input.wpColorPicker("close"))})}}}}]).directive("jobControl",[function(){return{restrict:"AE",scope:{jobControl:"=",jobId:"=?",perIteration:"=?",buttons:"@?"},controllerAs:"jc",template:'<div class="chayka-job_control {{jc.state}}">   <div class="progressbar">       <div class="progress_label">{{ jc.total ? jc.processed + " / " + jc.total + " (" + Math.floor(jc.processed / jc.total * 100) + "%)" : "0%" }}</div>   </div>   <div class="box_controls">       <button class="dashicons-before dashicons-controls-play button button-small button_start" data-ng-click="jc.start()" title="{{ \'btn_start\' | nls }}" data-ng-show="!jc.state && jc.buttons.indexOf(\'start\') >= 0"></button>       <button class="dashicons-before dashicons-controls-pause button button-small button_pause" data-ng-click="jc.pause()" title="{{ \'btn_pause\' | nls }}" data-ng-show="jc.state===\'running\' && jc.buttons.indexOf(\'pause\') >= 0"></button>       <button class="dashicons-before dashicons-controls-repeat button button-small button_resume" data-ng-click="jc.resume()" title="{{ \'btn_resume\' | nls }}" data-ng-show="jc.state===\'paused\' && jc.buttons.indexOf(\'resume\') >= 0"></button>       <button class="dashicons-before dashicons-no button button-small button_stop" data-ng-click="jc.stop()" title="{{ \'btn_stop\' | nls }}" data-ng-show="jc.state && jc.buttons.indexOf(\'stop\') >= 0"></button>       <span class="field_items_per_iteration">           <label>{{ "label_per_iteration" | nls }}</label>           <input type="number" data-ng-model="jc.perIteration"/>       </span>   </div>   <div data-spinner="spinner"></div>   <div class="box_output">       <div data-ng-repeat="message in jc.log track by $index" class="message">{{message}}</div>   </div></div>',controller:function($scope){var ctrl={jobId:$scope.jobId,state:"",perIteration:$scope.perIteration||10,total:100,processed:0,log:[],buttons:$scope.buttons?$scope.buttons.split(" "):["start","pause","resume","stop"],setJobId:function(val){return ctrl.jobId=val,ctrl},getJobId:function(){return ctrl.jobId},setPerIteration:function(val){return ctrl.perIteration=val,ctrl},getPerIteration:function(){return ctrl.perIteration},setTotal:function(val){return ctrl.total=val,ctrl},getTotal:function(){return ctrl.total},setProcessed:function(val){return ctrl.processed=val,ctrl},getProcessed:function(){return ctrl.processed},isFinished:function(){return ctrl.getTotal()===ctrl.getProcessed()},setProgress:function(processed,total){return ctrl.setProcessed(processed),ctrl.setTotal(total||ctrl.getTotal()||100),ctrl.isFinished()&&ctrl.setState("finished"),ctrl},setState:function(val){return ctrl.state=val,ctrl},getState:function(){return ctrl.state},addLogMessage:function(message){ctrl.log.push(message)},clearLog:function(){ctrl.log=[]},start:function(){$scope.$emit("JobControl.start",ctrl.jobId)},started:function(){ctrl.setState("running")},pause:function(){$scope.$emit("JobControl.pause",ctrl.jobId)},paused:function(){ctrl.setState("paused")},resume:function(){$scope.$emit("JobControl.resume",ctrl.jobId)},resumed:function(){ctrl.setState("running")},stop:function(){$scope.$emit("JobControl.stop",ctrl.jobId)},stopped:function(){ctrl.setState("")}};return $scope.jobControl=ctrl,ctrl}}}]).config(["nlsProvider","buttonsProvider",function(nlsProvider,buttonsProvider){nlsProvider.setTranslations("en-US",{btn_start:"Start",btn_stop:"Stop",btn_pause:"Pause",btn_resume:"Resume",label_per_iteration:"Per iteration"}),nlsProvider.setTranslations("ru-RU",{btn_start:"Старт",btn_stop:"Стоп",btn_pause:"Пауза",btn_resume:"Возобновить",label_per_iteration:"За итерацию"}),buttonsProvider.setButtonClass("button")}]);
//# sourceMappingURL=chayka-admin.js.map
